/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package nubecaserapsp;

import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.*;
import java.net.*;
import javax.imageio.ImageIO;
import javax.swing.*;

/**
 *
 * @author Joakamakaka
 */
public class Cliente extends JFrame {

    private Datos d;
    private File f;
    private String contenidoAnterior;

    public Cliente() {
        initComponents();
        setTitle("Cliente");
        d = new Datos();
        solicitarUsuario();
        setLocationRelativeTo(null);
        setResizable(false);
        txtEstado.setText(devolverIp());
        setIconImage(getIconImage());
    }

    @Override
    public Image getIconImage() {
        Image miIcono = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("imagen/logo.png"));
        return miIcono;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        txtEstado = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnSalir = new javax.swing.JButton();
        btnElegirArchivo = new javax.swing.JButton();
        btnEnviar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        imagen = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaMensaje = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Datos");

        jLabel4.setText("Usuario:");

        jLabel5.setText("Estado:");

        txtUsuario.setEditable(false);

        txtEstado.setEditable(false);
        txtEstado.setText("192.168.56.1");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(txtEstado))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 64, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 330, 120));

        jLabel1.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 28)); // NOI18N
        jLabel1.setText("Enviar Mensaje");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, -1, -1));

        btnSalir.setText("Salir");
        btnSalir.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 500, 100, 70));

        btnElegirArchivo.setText("Elegir archivo");
        btnElegirArchivo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnElegirArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnElegirArchivoActionPerformed(evt);
            }
        });
        jPanel1.add(btnElegirArchivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 500, 100, 70));

        btnEnviar.setText("Enviar");
        btnEnviar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEnviar, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 500, 110, 70));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel4.add(imagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 330, 250));

        textAreaMensaje.setEditable(false);
        textAreaMensaje.setColumns(20);
        textAreaMensaje.setRows(5);
        jScrollPane1.setViewportView(textAreaMensaje);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 328, 248));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 330, 250));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Fondo3.jpg"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 600));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnElegirArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnElegirArchivoActionPerformed
        String ruta = elegirArchivo();
        if (ruta != null) {
            leerFichero(ruta);
        }
    }//GEN-LAST:event_btnElegirArchivoActionPerformed

    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed
        enviar();
    }//GEN-LAST:event_btnEnviarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cliente.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cliente.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cliente.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cliente.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cliente().setVisible(true);
            }
        });
    }

    private void solicitarUsuario() {
        do {
            d.setUsuario(JOptionPane.showInputDialog(null, "Introduce tu usuario:"));
            if (d.getUsuario().isEmpty()) {
                JOptionPane.showMessageDialog(null, "No has elegido un nombre de usuario válido.", "Mensaje de aviso", JOptionPane.WARNING_MESSAGE);
            }
        } while (d.getUsuario().isEmpty());

        // Establecer el usuario en el textField después de obtenerlo
        txtUsuario.setText(d.getUsuario());
    }

    private String elegirArchivo() {
        JFileChooser seleccionarArchivo = new JFileChooser();
        seleccionarArchivo.showOpenDialog(this);

        f = seleccionarArchivo.getSelectedFile();
        if (f == null) {
            return null; // El usuario canceló la operación
        }

        if (f.isDirectory()) {
            JOptionPane.showMessageDialog(null, "Has elegido una carpeta.", "Mensaje de aviso", JOptionPane.WARNING_MESSAGE);
            return null;
        }

        String fileName = f.getName();
        if (fileName.endsWith(".txt") || fileName.endsWith(".png") || fileName.endsWith(".jpg")) {
            return f.getAbsolutePath();
        } else {
            JOptionPane.showMessageDialog(null, "No has elegido un archivo válido solo: .txt, .png o .jpg.", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
            return null;
        }
    }

    private void leerFichero(String filePath) {
        f = new File(filePath);
        if (filePath.endsWith(".txt")) {
            mostrarTxt(f);
        } else if (filePath.endsWith(".png") || filePath.endsWith(".jpg")) {
            mostrarImg(f);
        }
    }

    private String devolverContenido(File f) { // Lectura texto plano
        StringBuilder contenido = new StringBuilder();
        try {
            BufferedReader br = new BufferedReader(new FileReader(f));
            String linea;
            textAreaMensaje.setText("");

            while ((linea = br.readLine()) != null) {
                contenido.append(linea);
                textAreaMensaje.append(linea);
            }
            textAreaMensaje.setVisible(true);
        } catch (IOException e) {
            System.out.println(e);
        }
        return contenido.toString();
    }

    private void mostrarTxt(File f) {
        imagen.setVisible(false);
        d.setContenido(devolverContenido(f));
        d.setMensaje(" se ha subido " + f.getName());
        d.setArchivo(f);
        textAreaMensaje.setEditable(true);
    }

    private void modificarArchivo(File f, String nuevoContenido) { // Escritura texto plano
        File f2 = new File(f.getAbsoluteFile().getName());
        try {
            PrintWriter pw = new PrintWriter(new FileWriter(f2));
            pw.print(nuevoContenido);
            pw.flush();
        } catch (IOException e) {
            System.out.println(e);
        }
    }

    private void mostrarImg(File f) {
        textAreaMensaje.setVisible(false);
        try {
            BufferedImage img = ImageIO.read(f);
            if (img != null) {
                int ancho = imagen.getWidth();
                int alto = imagen.getHeight();
                Image resultado = img.getScaledInstance(ancho, alto, Image.SCALE_SMOOTH);
                imagen.setIcon(new ImageIcon(resultado));
                d.setMensaje(" ha subido " + f.getName());
                d.setArchivo(f);
            } else {
                imagen.setIcon(null);
                System.err.println("No se pudo leer la imagen correctamente.");
            }
            imagen.setVisible(true);
        } catch (IOException e) {
            System.out.println("Error al leer el fichero: " + e);
        }
    }

    private String devolverIp() {
        InetAddress ip;
        try {
            ip = InetAddress.getLocalHost();
            d.setIp(txtEstado.getText());
            return d.getIp();
        } catch (UnknownHostException ex) {
            System.out.println(ex);
        }

        return null;
    }

    private void enviarDatos() {
        try {
            Socket miSocket = new Socket(devolverIp(), 9999);
            ObjectOutputStream paqueteDatos = new ObjectOutputStream(miSocket.getOutputStream());

            d.setContenido(contenidoAnterior);
            paqueteDatos.writeObject(d);

            d.setIp(devolverIp());
            btnEnviar.setEnabled(true);

            miSocket.close();
            paqueteDatos.close();

            JOptionPane.showMessageDialog(null, "Se ha subido correctamente su archivo al servidor.", "Mensaje informativo",
                    JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException e) {
            System.out.println("Error al leer el fichero: " + e);
        }
    }

    private void enviar() {
        boolean bandera = false;

        if (f.exists()) {
            String nuevoContenido = textAreaMensaje.getText();

            if (!nuevoContenido.equals(contenidoAnterior)) {
                modificarArchivo(f, nuevoContenido);
                contenidoAnterior = nuevoContenido;
            }

            File directorio = new File("AntonioMarioJose");
            for (File x : directorio.listFiles()) {
                if (x.getAbsoluteFile().getName().equals(f.getAbsoluteFile().getName())) {
                    bandera = true;
                }
            }
            if (bandera == true) {
                int respuesta = JOptionPane.showConfirmDialog(null, "El archivo ya existe. ¿Desea reescribirlo?", "Confirmar reescritura", JOptionPane.YES_NO_OPTION);
                if (respuesta == 0) {
                    enviarDatos();
                }
            } else {
                enviarDatos();
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnElegirArchivo;
    private javax.swing.JButton btnEnviar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel imagen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea textAreaMensaje;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
